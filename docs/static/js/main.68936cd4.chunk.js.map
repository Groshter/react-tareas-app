{"version":3,"sources":["App.jsx","index.js"],"names":["App","React","useState","Listado","setListado","Tarea","setTarea","ModoEdita","setModoEdita","Identificador","setIdentificador","Error","setError","className","length","map","index","onClick","id","ArrayFiltrador","filter","t","EliminarTarea","EditarTarea","class","role","onSubmit","e","preventDefault","Modifica","trim","ArrayEditado","item","swal","title","text","icon","buttons","EditarTareaForm","Graba","shortid","generate","target","reset","AgregarTarea","type","placeholder","onChange","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPA+KeA,MA3Kf,WAAgB,IAAD,EAGiBC,IAAMC,SAAS,IAHhC,mBAGNC,EAHM,KAGGC,EAHH,OAIaH,IAAMC,SAAS,IAJ5B,mBAING,EAJM,KAICC,EAJD,OAKqBL,IAAMC,UAAS,GALpC,mBAKNK,EALM,KAKKC,EALL,OAM6BP,IAAMC,SAAS,IAN5C,mBAMNO,EANM,KAMSC,EANT,OAOaT,IAAMC,SAAS,MAP5B,mBAONS,EAPM,KAOCC,EAPD,KAkGb,OACE,sBAAKC,UAAU,iBAAf,UACE,oBAAIA,UAAU,cAAd,wBACA,uBACA,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,QAAf,UACE,oBAAIA,UAAU,cAAd,6BACA,oBAAIA,UAAU,aAAd,SAIIV,EAAQW,OAAS,EAEfX,EAAQY,KAAI,SAACV,EAAOW,GAAR,OAEV,qBAAIH,UAAU,kBAAd,UACE,sBAAMA,UAAU,OAAhB,SAAwBR,EAAMA,QAC9B,wBACEQ,UAAU,uCACVI,QAAS,kBAvEP,SAACC,GACrBN,EAAS,MACT,IAAMO,EAAiBhB,EAAQiB,QAAO,SAAAC,GAAC,OAAIA,EAAEH,KAAOA,KACpDd,EAAWe,GAoEsBG,CAAcjB,EAAMa,KAFrC,sBAKA,wBACEL,UAAU,mCACVI,QAAS,kBAtET,SAACZ,GACnBO,EAAS,MACTJ,GAAa,GACbF,EAASD,EAAMA,OACfK,EAAiBL,EAAMa,IAkEUK,CAAYlB,IAF7B,sBAPmCA,EAAMa,OAgB3C,qBAAKM,MAAM,mBAAmBC,KAAK,QAAnC,wDAUV,sBAAKZ,UAAU,QAAf,UACE,oBAAIA,UAAU,cAAd,SACGN,EAAY,eAAiB,kBAEhC,uBAAMmB,SAAUnB,EAAY,SAACoB,GAAD,OAnFZ,SAACA,GACvBA,EAAEC,iBACF,IAAIC,GAAW,EAQf,GANKxB,EAAMyB,SACTD,GAAW,EACXjB,EAAS,8BAIPiB,EAAU,CACZ,IAAME,EAAe5B,EAAQY,KAC3B,SAAAiB,GAAI,OAAIA,EAAKd,KAAOT,EAAgB,CAAES,GAAIT,EAAeJ,MAAOA,GAAU2B,KAG5E5B,EAAW2B,GACXvB,GAAa,GACbF,EAAS,IACTI,EAAiB,IACjBE,EAAS,MACTqB,IAAK,CACHC,MAAO,mBACPC,KAAM,4BACNC,KAAM,UACNC,QAAS,iBAKXJ,IAAK,CACHC,MAAO,wBACPC,KAAM,+BACNC,KAAM,QACNC,QAAS,wBAkD4BC,CAAgBX,IAAK,SAACA,GAAD,OAtI3C,SAACA,GACpBA,EAAEC,iBAEF,IAAIW,GAAQ,EAEPlC,EAAMyB,SACTS,GAAQ,EACR3B,EAAS,8BAGP2B,GACFnC,EAAW,GAAD,mBAAKD,GAAL,CAAc,CAAEe,GAAIsB,IAAQC,WAAYpC,MAAOA,MAEzDsB,EAAEe,OAAOC,QAETrC,EAAS,IAET2B,IAAK,CACHC,MAAO,mBACPC,KAAM,yBACNC,KAAM,UACNC,QAAS,YAEXzB,EAAS,OAITqB,IAAK,CACHC,MAAO,sBACPC,KAAM,+BACNC,KAAM,QACNC,QAAS,wBAuGwDO,CAAajB,IAA5E,UACE,uBACEkB,KAAK,OACLhC,UAAU,oBACViC,YAAY,gBACZC,SAAU,SAACpB,GAAD,OAAOrB,EAASqB,EAAEe,OAAOM,QACnCA,MAAO3C,IAEC,MAATM,EAAgB,mBAAGE,UAAU,aAAb,SAA2BF,IAAa,GACzD,qBAAKE,UAAU,eAAf,SAEIN,EACE,wBAAQM,UAAU,kBAAkBgC,KAAK,SAAzC,uBAEE,wBAAQhC,UAAU,eAAegC,KAAK,SAAtC,oCC5JpBI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.68936cd4.chunk.js","sourcesContent":["import React from 'react'\nimport swal from 'sweetalert'\nimport shortid from 'shortid'\n\nfunction App() {\n\n\n  const [Listado, setListado] = React.useState([]);\n  const [Tarea, setTarea] = React.useState('');\n  const [ModoEdita, setModoEdita] = React.useState(false);\n  const [Identificador, setIdentificador] = React.useState('');\n  const [Error, setError] = React.useState(null);\n\n  const AgregarTarea = (e) => {\n    e.preventDefault();\n\n    let Graba = true;\n\n    if (!Tarea.trim()) {\n      Graba = false;\n      setError('Escriba algo por favor...')\n    }\n\n    if (Graba) {\n      setListado([...Listado, { id: shortid.generate(), Tarea: Tarea }]);\n\n      e.target.reset();\n\n      setTarea('');\n\n      swal({\n        title: \"Proceso Correcto\",\n        text: \"Se ha grabado la tarea\",\n        icon: \"success\",\n        buttons: \"Aceptar\",\n      });\n      setError(null);\n\n    }\n    else {\n      swal({\n        title: \"No se puede guardar\",\n        text: \"Faltan Campos por completar.\",\n        icon: \"error\",\n        buttons: \"Terminar Formulario\",\n      });\n    }\n\n  }\n\n  const EliminarTarea = (id) => {\n    setError(null);\n    const ArrayFiltrador = Listado.filter(t => t.id !== id);\n    setListado(ArrayFiltrador);\n  }\n\n  const EditarTarea = (Tarea) => {\n    setError(null);\n    setModoEdita(true);\n    setTarea(Tarea.Tarea);\n    setIdentificador(Tarea.id);\n\n  }\n\n  const EditarTareaForm = (e) => {\n    e.preventDefault();\n    let Modifica = true;\n\n    if (!Tarea.trim()) {\n      Modifica = false;\n      setError('Escriba algo por favor...')\n    }\n\n\n    if (Modifica) {\n      const ArrayEditado = Listado.map(\n        item => item.id === Identificador ? { id: Identificador, Tarea: Tarea } : item\n      );\n\n      setListado(ArrayEditado);\n      setModoEdita(false);\n      setTarea('');\n      setIdentificador('');\n      setError(null);\n      swal({\n        title: \"Proceso Correcto\",\n        text: \"Se ha modificado la tarea\",\n        icon: \"success\",\n        buttons: \"Aceptar\",\n      });\n\n    }\n    else {\n      swal({\n        title: \"No se puede modificar\",\n        text: \"Faltan Campos por completar.\",\n        icon: \"error\",\n        buttons: \"Terminar Formulario\",\n      });\n    }\n  }\n\n  return (\n    <div className=\"container mt-5\">\n      <h1 className=\"text-center\">CRUD React</h1>\n      <hr />\n      <div className=\"row\">\n        <div className=\"col-8\">\n          <h5 className=\"text-center\" >Lista de tareas</h5>\n          <ul className=\"list-group\">\n\n            {\n\n              Listado.length > 0 ? (\n\n                Listado.map((Tarea, index) => (\n\n                  <li className=\"list-group-item\" key={Tarea.id}>\n                    <span className=\"lead\">{Tarea.Tarea}</span>\n                    <button\n                      className=\"btn btn-danger btn-sm float-end mx-2\"\n                      onClick={() => EliminarTarea(Tarea.id)}\n                    >Eliminar</button>\n\n                    <button\n                      className=\"btn btn-warning btn-sm float-end\"\n                      onClick={() => EditarTarea(Tarea)}\n                    >Editar</button>\n\n                  </li>\n\n                ))\n              ) : (\n                  <div class=\"alert alert-info\" role=\"alert\">\n                    No se han agregado tareas a la lista.\n                  </div>\n                )\n\n            }\n\n\n          </ul>\n        </div>\n        <div className=\"col-4\">\n          <h5 className=\"text-center\" >\n            {ModoEdita ? 'Editar Tarea' : 'Agregar Tarea'}\n          </h5>\n          <form onSubmit={ModoEdita ? (e) => EditarTareaForm(e) : (e) => AgregarTarea(e)}>\n            <input\n              type=\"text\"\n              className=\"form-control mb-2\"\n              placeholder=\"Ingrese tarea\"\n              onChange={(e) => setTarea(e.target.value)}\n              value={Tarea}\n            />\n            {Error != null ? <p className=\"Color-Rojo\">{Error}</p> : ''}\n            <div className=\"d-grid gap-2\">\n              {\n                ModoEdita ? (\n                  <button className=\"btn btn-warning\" type=\"submit\">Modificar</button>\n                ) : (\n                    <button className=\"btn btn-dark\" type=\"submit\">Agregar</button>\n                  )\n              }\n            </div>\n\n\n          </form>\n        </div>\n      </div>\n    </div>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}